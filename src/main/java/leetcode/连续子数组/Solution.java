package leetcode.连续子数组;

class Solution {
    public int getMaxScore(int[] shangqiList) {
        int pre = 0, maxAns = shangqiList[0];
        int pre2 = 0, minAns = shangqiList[0];
        for (int x : shangqiList) {
            pre = Math.max(pre + x, x);
            maxAns = Math.max(maxAns, pre);

            pre2 = Math.min(pre2 + x, x);
            minAns = Math.min(minAns, pre2);
        }
        return Math.max(Math.abs(maxAns), Math.abs(minAns));
    }

    public static void main(String[] args) {
        int[] s1 = {-1, 2, -3, 4, -5, 3, -3, 2, -4, 5, -3, -1};  //7
        int[] s2 = {-1, 1, -1, 1, -1};
        int[] s3 = {-1};

        int[] p1 = {-6, 5, -2, 6, -8, 7, -9, 11, -3, -5, -2, 8, -1, 7, -6, 5, -9, 10, -5, 3, 4, 2, -6, -1, -3, 10};
        //p1 19
        int[] p2 = {1806, -6771, -1534, -5016, 6991, 149, -615, 1787, -1311, -7549, -6235, -9920, 88, -1930, -8536, 6607, -9918, -8286, -5579, 7005, -5568, -3796, 5991, 5598, -190, 637, 2099, 4868, -148, -3440, 7998, -185, 6333, 2508, 6851, 4549, 1891, 994, -7197, 4997, 4292, -6851, 8019, 5885, -4317, -2675};
        //p2 59937
        int[] p3 = {7951, -1055, -2814, -6242, 5971, -8123, 2152, 7286, -5950, 9412, -1967, 7719, 9490, 122, -200, 6393, -61, -4824, 759, -9929, 872, 4410, -9011, -6099, -2079, -6282, -5733, -5308, -6733, 7624, 3147, 841, -5085, 3668, -6157, -4884, -8299, -308, 5036, 2191, -3, 9809, -6944, -9345, 8050, -9611, -1829, 7839, 8439, 8834, 7257, 1684, -1555, -3560, 7318, 7802, -283, -6310, 898, -5647, -2543, 1011, -5550, 8066, -9124, -44, 4998, 6182, -8771, 4152, 5801, 5801, 4621, 9167, -7933, -7461, -4000, -1971, 924, 9996, -9725, 5933, 4174};
        //p3 62117
        Solution solution = new Solution();
        int res = solution.getMaxScore(s3);
        System.out.println(res);
    }
}

